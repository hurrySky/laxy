<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sbs.system.music.mapper.SongMapper">
	<resultMap type="Song" id="SongResult">
		<id     property="songId"       column="song_id"          />
		<result property="songName"    	column="song_name"        />
		<result property="songAuthor"   column="song_author"      />
		<result property="songImgurl"   column="song_imgurl"      />
		<result property="songUrl"    	column="song_url"    	  />
		<result property="songDesc"    	column="song_desc"    	  />
		<result property="songMenuId"    	column="song_menu_id"   />
		<result property="isPlayLists"    	column="is_Play_lists"   />
		<result property="isTempPlayLists"    	column="is_temp_play_lists"   />
		
	</resultMap>
	
	<insert id="insertSong" parameterType="Song" useGeneratedKeys="true" keyProperty="songId">
 		insert 
 		into 
 			sys_song(
 			<if	test="songId != null and songId = ''">		      song_id,</if>
			<if	test="songName != null and songName != ''">       song_name,</if>
			<if	test="songAuthor != null and songAuthor != ''">   song_author,</if>
			<if	test="songImgurl != null and songImgurl != ''">   song_imgurl,</if>
			<if	test="songUrl != null and songUrl != ''">    	  song_url,</if>
			<if	test="songMenuId != null and songMenuId != ''">   song_menu_id,</if>
			<if	test="songDesc != null and songDesc != ''">       song_desc</if>
			<if	test="isPlayLists != null and isPlayLists != ''">       is_Play_lists</if>
			<if	test="isTempPlayLists != null and isTempPlayLists != ''">       is_temp_play_lists</if>
			
 		)values(
 			<if	test="songId != null and songId = ''">		      #{songId},</if>
			<if	test="songName != null and songName != ''">       #{songName},</if>
			<if	test="songAuthor != null and songAuthor != ''">   #{songAuthor},</if>
			<if	test="songImgurl != null and songImgurl != ''">   #{songImgurl},</if>
			<if	test="songUrl != null and songUrl != ''">         #{songUrl},</if>
			<if	test="songMenuId != null and songMenuId != ''">   #{songMenuId},</if>
			<if	test="songDesc != null and songDesc != ''">       #{songDesc}</if>
			<if	test="isPlayLists != null and isPlayLists != ''"> #{isPlayLists}</if>
			<if	test="isTempPlayLists != null and isTempPlayLists != ''"> #{isTempPlayLists}</if>
 		)
	</insert>
	
	<select id="findAllMusic" resultMap="SongResult">
		select 
			s.song_id,
			s.song_author,
			s.song_name,
			s.song_imgurl,
			s.song_url,
			s.song_menu_id,
			s.song_desc,
			s.is_Play_lists,
			s.is_temp_play_lists
		from
			sys_song s
	</select>
	
	<select id="findPlayListMusic" resultMap="SongResult">
		select 
			s.song_id,
			s.song_author,
			s.song_name,
			s.song_imgurl,
			s.song_url,
			s.song_menu_id,
			s.song_desc,
			s.is_Play_lists,
			s.is_temp_play_lists
		from
			sys_song s
			<where>
				s.is_Play_lists = 1
			</where>
	</select>
	
	<select id="findPlayListMusicAndTemp" resultMap="SongResult">
		select 
			s.song_id,
			s.song_author,
			s.song_name,
			s.song_imgurl,
			s.song_url,
			s.song_menu_id,
			s.song_desc,
			s.is_Play_lists,
			s.is_temp_play_lists
		from
			sys_song s
			<where>
				s.is_Play_lists = 1 or s.is_temp_play_lists = 1
			</where>
	</select>
	
	<update id="truncateSong">
        truncate table sys_song;
    </update>
    
    <select id="findSongByMenuId" resultMap="SongResult" parameterType="int">
		select 
			s.song_id,
			s.song_author,
			s.song_name,
			s.song_imgurl,
			s.song_url,
			s.song_menu_id,
			s.song_desc,
			s.is_Play_lists,
			s.is_temp_play_lists
		from
			sys_song s
		<where>
			s.song_menu_id = #{songMenuId}
		</where>
	</select>
	
	<select id="findMusicBySongId" resultMap="SongResult" parameterType="int">
		select 
			s.song_id,
			s.song_author,
			s.song_name,
			s.song_imgurl,
			s.song_url,
			s.song_menu_id,
			s.song_desc,
			s.is_Play_lists,
			s.is_temp_play_lists
		from
			sys_song s
		<where>
			s.song_id = #{songId}
		</where>
	</select>
	
	<update id="addOrRemovePlayLists" parameterType="Map">
		update
			sys_song s
				set s.is_Play_lists = #{1}
			where
				s.song_id = #{0}
	</update>
	
	<update id="addSongTempPlayLists" parameterType="int">
		update
			sys_song s
				set s.is_temp_play_lists = 1
			where
				s.song_id = #{songId}
	</update>
	
</mapper>
